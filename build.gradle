buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.8"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: 'maven'

version = getVersion();
group = "com.blamejared.mas"
archivesBaseName = "MachinesAndStuff"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = "${mappings_version}"
}
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name "Tesla"
        url 'http://maven.epoxide.xyz'
    }
    maven {
        name 'Jared'
        url 'http://blamejared.com/maven'
    }
    maven {
        name 'JEI'
            url "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    deobfCompile "net.darkhax.tesla:Tesla:1.11-1.3.0.52"
    deobfCompile "mezz.jei:jei_1.11.2:4.3.4.273"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


String getVersion() {
    String version = "${mod_version}"
    String buildNumber = getBuildNumber()
    if (buildNumber != "") {
        version += "." + buildNumber
    }

    return version
}

static String getBuildNumber() {
    String buildNumber = System.getenv("BUILD_NUMBER") != null ? System.getenv("BUILD_NUMBER") : ""
    if (buildNumber == "") {
        buildNumber = System.getenv("bamboo_buildNumber") != null ? "." + System.getenv("bamboo_buildNumber") : ""
    }
    return buildNumber
}

task createDeobf(type: Jar) {

    from sourceSets.main.output
    classifier = 'deobf'
}

task createSources(type: Jar, dependsOn: classes) {

    from sourceSets.main.allSource
    classifier = 'sources'
}

task createJavadoc(type: Jar, dependsOn: javadoc) {

    from javadoc.destinationDir
    classifier = 'javadoc'
}
// Taken from https://github.com/Inventory-Tweaks/inventory-tweaks/blob/develop/build.gradle
def getGitChangelog = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        def gitHash = System.getenv('GIT_COMMIT')
        def gitPrevHash = System.getenv('GIT_PREVIOUS_COMMIT')
        def travisRange = System.getenv('TRAVIS_COMMIT_RANGE')
        if (gitHash && gitPrevHash) {
            exec {
                commandLine 'git', 'log', '--pretty=tformat:- %s', '' + gitPrevHash + '...' + gitHash
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } else if (travisRange) {
            exec {
                commandLine 'git', 'log', '--pretty=tformat:- %s', '' + travisRange
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } else {
            return "";
        }
    } catch (ignored) {
        return "";
    }
}
curseforge {

    apiKey = System.getenv('authCurse') ? System.getenv('authCurse') : '0';

    project {

        id = "${id_curse}"
        releaseType = 'beta'
        changelog = getGitChangelog()
        changelogType = 'markdown'
        addGameVersion "${minecraft_version}"
        addArtifact(createDeobf)
        addArtifact(createSources)
        addArtifact(createJavadoc)
    }
}

artifacts {

    archives createDeobf
    archives createSources
    archives createJavadoc
}
configurations {
    deployerJars
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///var/www/html/maven")
        }
    }
}